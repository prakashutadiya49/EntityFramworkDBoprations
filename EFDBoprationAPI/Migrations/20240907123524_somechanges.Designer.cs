// <auto-generated />
using System;
using EFDBoprationAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDBoprationAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240907123524_somechanges")]
    partial class somechanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.BookPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("BookPrice");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "United States Dollar",
                            Title = "USD"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Euro",
                            Title = "EUR"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Japanese Yen",
                            Title = "JPY"
                        },
                        new
                        {
                            Id = 4,
                            Description = "British Pound Sterling",
                            Title = "GBP"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Australian Dollar",
                            Title = "AUD"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Canadian Dollar",
                            Title = "CAD"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Swiss Franc",
                            Title = "CHF"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Chinese Yuan",
                            Title = "CNY"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Swedish Krona",
                            Title = "SEK"
                        },
                        new
                        {
                            Id = 10,
                            Description = "New Zealand Dollar",
                            Title = "NZD"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Indian Rupee",
                            Title = "INR"
                        });
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "English language",
                            Title = "English"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Spanish language",
                            Title = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            Description = "French language",
                            Title = "French"
                        },
                        new
                        {
                            Id = 4,
                            Description = "German language",
                            Title = "German"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Chinese language",
                            Title = "Chinese"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Japanese language",
                            Title = "Japanese"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Russian language",
                            Title = "Russian"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Arabic language",
                            Title = "Arabic"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Portuguese language",
                            Title = "Portuguese"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Italian language",
                            Title = "Italian"
                        });
                });

            modelBuilder.Entity("EFDBoprationAPI.Data.languagedatatransfertable", b =>
                {
                    b.Property<int>("languageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("languageid"));

                    b.Property<string>("languagename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("languageid");

                    b.ToTable("languagedatatransfertable");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Book", b =>
                {
                    b.HasOne("DbOperationsWithEFCoreApp.Data.Language", "Language")
                        .WithMany("Book")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.BookPrice", b =>
                {
                    b.HasOne("DbOperationsWithEFCoreApp.Data.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbOperationsWithEFCoreApp.Data.Currency", "Currency")
                        .WithMany("BookPrice")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Currency", b =>
                {
                    b.Navigation("BookPrice");
                });

            modelBuilder.Entity("DbOperationsWithEFCoreApp.Data.Language", b =>
                {
                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
